#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentApartment.Core.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RentApartments")]
	public partial class RApmentModell2sqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    partial void Insert_Amenity(_Amenity instance);
    partial void Update_Amenity(_Amenity instance);
    partial void Delete_Amenity(_Amenity instance);
    partial void Insert_Country(_Country instance);
    partial void Update_Country(_Country instance);
    partial void Delete_Country(_Country instance);
    partial void Insert_Currency(_Currency instance);
    partial void Update_Currency(_Currency instance);
    partial void Delete_Currency(_Currency instance);
    partial void Insert_Role(_Role instance);
    partial void Update_Role(_Role instance);
    partial void Delete_Role(_Role instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertGuestReview(GuestReview instance);
    partial void UpdateGuestReview(GuestReview instance);
    partial void DeleteGuestReview(GuestReview instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertPropertyListing(PropertyListing instance);
    partial void UpdatePropertyListing(PropertyListing instance);
    partial void DeletePropertyListing(PropertyListing instance);
    partial void InsertPropertyListing__Amenity(PropertyListing__Amenity instance);
    partial void UpdatePropertyListing__Amenity(PropertyListing__Amenity instance);
    partial void DeletePropertyListing__Amenity(PropertyListing__Amenity instance);
    #endregion
		
		public RApmentModell2sqlDataContext() : 
				base(global::RentApartment.Core.Properties.Settings.Default.RentApartmentsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RApmentModell2sqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RApmentModell2sqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RApmentModell2sqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RApmentModell2sqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
		
		public System.Data.Linq.Table<_Amenity> _Amenities
		{
			get
			{
				return this.GetTable<_Amenity>();
			}
		}
		
		public System.Data.Linq.Table<_Country> _Countries
		{
			get
			{
				return this.GetTable<_Country>();
			}
		}
		
		public System.Data.Linq.Table<_Currency> _Currencies
		{
			get
			{
				return this.GetTable<_Currency>();
			}
		}
		
		public System.Data.Linq.Table<_Role> _Roles
		{
			get
			{
				return this.GetTable<_Role>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<GuestReview> GuestReviews
		{
			get
			{
				return this.GetTable<GuestReview>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<PropertyListing> PropertyListings
		{
			get
			{
				return this.GetTable<PropertyListing>();
			}
		}
		
		public System.Data.Linq.Table<PropertyListing__Amenity> PropertyListing__Amenities
		{
			get
			{
				return this.GetTable<PropertyListing__Amenity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservations")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReservationId;
		
		private int _FK_Account;
		
		private int _FK_PropertyListing;
		
		private int _ReservationStatus;
		
		private System.DateTime _ReservationStart;
		
		private System.DateTime _ReservationEnd;
		
		private string _ReservationNote;
		
		private int _FK__Currency;
		
		private EntityRef<_Currency> @__Currency;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<PropertyListing> _PropertyListing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationIdChanging(int value);
    partial void OnReservationIdChanged();
    partial void OnFK_AccountChanging(int value);
    partial void OnFK_AccountChanged();
    partial void OnFK_PropertyListingChanging(int value);
    partial void OnFK_PropertyListingChanged();
    partial void OnReservationStatusChanging(int value);
    partial void OnReservationStatusChanged();
    partial void OnReservationStartChanging(System.DateTime value);
    partial void OnReservationStartChanged();
    partial void OnReservationEndChanging(System.DateTime value);
    partial void OnReservationEndChanged();
    partial void OnReservationNoteChanging(string value);
    partial void OnReservationNoteChanged();
    partial void OnFK__CurrencyChanging(int value);
    partial void OnFK__CurrencyChanged();
    #endregion
		
		public Reservation()
		{
			this.@__Currency = default(EntityRef<_Currency>);
			this._Account = default(EntityRef<Account>);
			this._PropertyListing = default(EntityRef<PropertyListing>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReservationId
		{
			get
			{
				return this._ReservationId;
			}
			set
			{
				if ((this._ReservationId != value))
				{
					this.OnReservationIdChanging(value);
					this.SendPropertyChanging();
					this._ReservationId = value;
					this.SendPropertyChanged("ReservationId");
					this.OnReservationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Account", DbType="Int NOT NULL")]
		public int FK_Account
		{
			get
			{
				return this._FK_Account;
			}
			set
			{
				if ((this._FK_Account != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_AccountChanging(value);
					this.SendPropertyChanging();
					this._FK_Account = value;
					this.SendPropertyChanged("FK_Account");
					this.OnFK_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PropertyListing", DbType="Int NOT NULL")]
		public int FK_PropertyListing
		{
			get
			{
				return this._FK_PropertyListing;
			}
			set
			{
				if ((this._FK_PropertyListing != value))
				{
					if (this._PropertyListing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PropertyListingChanging(value);
					this.SendPropertyChanging();
					this._FK_PropertyListing = value;
					this.SendPropertyChanged("FK_PropertyListing");
					this.OnFK_PropertyListingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationStatus", DbType="Int NOT NULL")]
		public int ReservationStatus
		{
			get
			{
				return this._ReservationStatus;
			}
			set
			{
				if ((this._ReservationStatus != value))
				{
					this.OnReservationStatusChanging(value);
					this.SendPropertyChanging();
					this._ReservationStatus = value;
					this.SendPropertyChanged("ReservationStatus");
					this.OnReservationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationStart", DbType="DateTime NOT NULL")]
		public System.DateTime ReservationStart
		{
			get
			{
				return this._ReservationStart;
			}
			set
			{
				if ((this._ReservationStart != value))
				{
					this.OnReservationStartChanging(value);
					this.SendPropertyChanging();
					this._ReservationStart = value;
					this.SendPropertyChanged("ReservationStart");
					this.OnReservationStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationEnd", DbType="DateTime NOT NULL")]
		public System.DateTime ReservationEnd
		{
			get
			{
				return this._ReservationEnd;
			}
			set
			{
				if ((this._ReservationEnd != value))
				{
					this.OnReservationEndChanging(value);
					this.SendPropertyChanging();
					this._ReservationEnd = value;
					this.SendPropertyChanged("ReservationEnd");
					this.OnReservationEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationNote", DbType="NVarChar(255)")]
		public string ReservationNote
		{
			get
			{
				return this._ReservationNote;
			}
			set
			{
				if ((this._ReservationNote != value))
				{
					this.OnReservationNoteChanging(value);
					this.SendPropertyChanging();
					this._ReservationNote = value;
					this.SendPropertyChanged("ReservationNote");
					this.OnReservationNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK__Currency", DbType="Int NOT NULL")]
		public int FK__Currency
		{
			get
			{
				return this._FK__Currency;
			}
			set
			{
				if ((this._FK__Currency != value))
				{
					if (this.@__Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK__CurrencyChanging(value);
					this.SendPropertyChanging();
					this._FK__Currency = value;
					this.SendPropertyChanged("FK__Currency");
					this.OnFK__CurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Currency_Reservation", Storage="__Currency", ThisKey="FK__Currency", OtherKey="Id", IsForeignKey=true)]
		public _Currency _Currency
		{
			get
			{
				return this.@__Currency.Entity;
			}
			set
			{
				_Currency previousValue = this.@__Currency.Entity;
				if (((previousValue != value) 
							|| (this.@__Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Currency.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this.@__Currency.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._FK__Currency = value.Id;
					}
					else
					{
						this._FK__Currency = default(int);
					}
					this.SendPropertyChanged("_Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Reservation", Storage="_Account", ThisKey="FK_Account", OtherKey="id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._FK_Account = value.id;
					}
					else
					{
						this._FK_Account = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PropertyListing_Reservation", Storage="_PropertyListing", ThisKey="FK_PropertyListing", OtherKey="PropertyId", IsForeignKey=true)]
		public PropertyListing PropertyListing
		{
			get
			{
				return this._PropertyListing.Entity;
			}
			set
			{
				PropertyListing previousValue = this._PropertyListing.Entity;
				if (((previousValue != value) 
							|| (this._PropertyListing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PropertyListing.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._PropertyListing.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._FK_PropertyListing = value.PropertyId;
					}
					else
					{
						this._FK_PropertyListing = default(int);
					}
					this.SendPropertyChanged("PropertyListing");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_Amenities]")]
	public partial class _Amenity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private EntitySet<PropertyListing__Amenity> _PropertyListing__Amenities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public _Amenity()
		{
			this._PropertyListing__Amenities = new EntitySet<PropertyListing__Amenity>(new Action<PropertyListing__Amenity>(this.attach_PropertyListing__Amenities), new Action<PropertyListing__Amenity>(this.detach_PropertyListing__Amenities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Amenity_PropertyListing__Amenity", Storage="_PropertyListing__Amenities", ThisKey="id", OtherKey="FK__Amenities")]
		public EntitySet<PropertyListing__Amenity> PropertyListing__Amenities
		{
			get
			{
				return this._PropertyListing__Amenities;
			}
			set
			{
				this._PropertyListing__Amenities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PropertyListing__Amenities(PropertyListing__Amenity entity)
		{
			this.SendPropertyChanging();
			entity._Amenity = this;
		}
		
		private void detach_PropertyListing__Amenities(PropertyListing__Amenity entity)
		{
			this.SendPropertyChanging();
			entity._Amenity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_Country]")]
	public partial class _Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _IsoCode;
		
		private string _Name;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<PropertyListing> _PropertyListings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIsoCodeChanging(string value);
    partial void OnIsoCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public _Country()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._PropertyListings = new EntitySet<PropertyListing>(new Action<PropertyListing>(this.attach_PropertyListings), new Action<PropertyListing>(this.detach_PropertyListings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsoCode", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsoCode
		{
			get
			{
				return this._IsoCode;
			}
			set
			{
				if ((this._IsoCode != value))
				{
					this.OnIsoCodeChanging(value);
					this.SendPropertyChanging();
					this._IsoCode = value;
					this.SendPropertyChanged("IsoCode");
					this.OnIsoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Country_Account", Storage="_Accounts", ThisKey="id", OtherKey="FK__Country")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Country_PropertyListing", Storage="_PropertyListings", ThisKey="id", OtherKey="FK__Country")]
		public EntitySet<PropertyListing> PropertyListings
		{
			get
			{
				return this._PropertyListings;
			}
			set
			{
				this._PropertyListings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity._Country = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity._Country = null;
		}
		
		private void attach_PropertyListings(PropertyListing entity)
		{
			this.SendPropertyChanging();
			entity._Country = this;
		}
		
		private void detach_PropertyListings(PropertyListing entity)
		{
			this.SendPropertyChanging();
			entity._Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_Currency]")]
	public partial class _Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Country;
		
		private string _CurrencyName;
		
		private string _Code;
		
		private string _Symbol;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    #endregion
		
		public _Currency()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Currency", Storage="_CurrencyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Currency_Reservation", Storage="_Reservations", ThisKey="Id", OtherKey="FK__Currency")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity._Currency = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity._Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_Roles]")]
	public partial class _Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _RoleId;
		
		private string _RoleName;
		
		private string _RoleDescription;
		
		private EntitySet<Account> _Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(byte value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleDescriptionChanging(string value);
    partial void OnRoleDescriptionChanged();
    #endregion
		
		public _Role()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDescription", DbType="VarChar(40)")]
		public string RoleDescription
		{
			get
			{
				return this._RoleDescription;
			}
			set
			{
				if ((this._RoleDescription != value))
				{
					this.OnRoleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RoleDescription = value;
					this.SendPropertyChanged("RoleDescription");
					this.OnRoleDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Role_Account", Storage="_Accounts", ThisKey="RoleId", OtherKey="FK__Roles")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity._Role = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity._Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AccountId;
		
		private string _PasswordHash;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private bool _IsEmailConfirmed;
		
		private int _FK__Country;
		
		private byte _FK__Roles;
		
		private string _City;
		
		private string _Address;
		
		private string _Mobile;
		
		private System.Nullable<byte> _Gender;
		
		private string _PostalCode;
		
		private System.Nullable<int> _Language;
		
		private bool _IsValidated;
		
		private string _ImageSourceId;
		
		private EntitySet<Reservation> _Reservations;
		
		private EntitySet<GuestReview> _GuestReviews;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<PropertyListing> _PropertyListings;
		
		private EntityRef<_Country> @__Country;
		
		private EntityRef<_Role> @__Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAccountIdChanging(string value);
    partial void OnAccountIdChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsEmailConfirmedChanging(bool value);
    partial void OnIsEmailConfirmedChanged();
    partial void OnFK__CountryChanging(int value);
    partial void OnFK__CountryChanged();
    partial void OnFK__RolesChanging(byte value);
    partial void OnFK__RolesChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnGenderChanging(System.Nullable<byte> value);
    partial void OnGenderChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnLanguageChanging(System.Nullable<int> value);
    partial void OnLanguageChanged();
    partial void OnIsValidatedChanging(bool value);
    partial void OnIsValidatedChanged();
    partial void OnImageSourceIdChanging(string value);
    partial void OnImageSourceIdChanged();
    #endregion
		
		public Account()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			this._GuestReviews = new EntitySet<GuestReview>(new Action<GuestReview>(this.attach_GuestReviews), new Action<GuestReview>(this.detach_GuestReviews));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._PropertyListings = new EntitySet<PropertyListing>(new Action<PropertyListing>(this.attach_PropertyListings), new Action<PropertyListing>(this.detach_PropertyListings));
			this.@__Country = default(EntityRef<_Country>);
			this.@__Role = default(EntityRef<_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmailConfirmed", DbType="Bit NOT NULL")]
		public bool IsEmailConfirmed
		{
			get
			{
				return this._IsEmailConfirmed;
			}
			set
			{
				if ((this._IsEmailConfirmed != value))
				{
					this.OnIsEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsEmailConfirmed = value;
					this.SendPropertyChanged("IsEmailConfirmed");
					this.OnIsEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK__Country", DbType="Int NOT NULL")]
		public int FK__Country
		{
			get
			{
				return this._FK__Country;
			}
			set
			{
				if ((this._FK__Country != value))
				{
					if (this.@__Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK__CountryChanging(value);
					this.SendPropertyChanging();
					this._FK__Country = value;
					this.SendPropertyChanged("FK__Country");
					this.OnFK__CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK__Roles", DbType="TinyInt NOT NULL")]
		public byte FK__Roles
		{
			get
			{
				return this._FK__Roles;
			}
			set
			{
				if ((this._FK__Roles != value))
				{
					if (this.@__Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK__RolesChanging(value);
					this.SendPropertyChanging();
					this._FK__Roles = value;
					this.SendPropertyChanged("FK__Roles");
					this.OnFK__RolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt")]
		public System.Nullable<byte> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(255)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int")]
		public System.Nullable<int> Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValidated", DbType="Bit NOT NULL")]
		public bool IsValidated
		{
			get
			{
				return this._IsValidated;
			}
			set
			{
				if ((this._IsValidated != value))
				{
					this.OnIsValidatedChanging(value);
					this.SendPropertyChanging();
					this._IsValidated = value;
					this.SendPropertyChanged("IsValidated");
					this.OnIsValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageSourceId", DbType="NVarChar(255)")]
		public string ImageSourceId
		{
			get
			{
				return this._ImageSourceId;
			}
			set
			{
				if ((this._ImageSourceId != value))
				{
					this.OnImageSourceIdChanging(value);
					this.SendPropertyChanging();
					this._ImageSourceId = value;
					this.SendPropertyChanged("ImageSourceId");
					this.OnImageSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Reservation", Storage="_Reservations", ThisKey="id", OtherKey="FK_Account")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_GuestReview", Storage="_GuestReviews", ThisKey="id", OtherKey="FK_Account")]
		public EntitySet<GuestReview> GuestReviews
		{
			get
			{
				return this._GuestReviews;
			}
			set
			{
				this._GuestReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Message", Storage="_Messages", ThisKey="id", OtherKey="FK_Account")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PropertyListing", Storage="_PropertyListings", ThisKey="id", OtherKey="FK_Account")]
		public EntitySet<PropertyListing> PropertyListings
		{
			get
			{
				return this._PropertyListings;
			}
			set
			{
				this._PropertyListings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Country_Account", Storage="__Country", ThisKey="FK__Country", OtherKey="id", IsForeignKey=true)]
		public _Country _Country
		{
			get
			{
				return this.@__Country.Entity;
			}
			set
			{
				_Country previousValue = this.@__Country.Entity;
				if (((previousValue != value) 
							|| (this.@__Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Country.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this.@__Country.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._FK__Country = value.id;
					}
					else
					{
						this._FK__Country = default(int);
					}
					this.SendPropertyChanged("_Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Role_Account", Storage="__Role", ThisKey="FK__Roles", OtherKey="RoleId", IsForeignKey=true)]
		public _Role _Role
		{
			get
			{
				return this.@__Role.Entity;
			}
			set
			{
				_Role previousValue = this.@__Role.Entity;
				if (((previousValue != value) 
							|| (this.@__Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Role.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this.@__Role.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._FK__Roles = value.RoleId;
					}
					else
					{
						this._FK__Roles = default(byte);
					}
					this.SendPropertyChanged("_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_GuestReviews(GuestReview entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_GuestReviews(GuestReview entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_PropertyListings(PropertyListing entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PropertyListings(PropertyListing entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GuestReviews")]
	public partial class GuestReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReviewId;
		
		private int _FK_Account;
		
		private int _FK_PropertyListing;
		
		private string _Review;
		
		private int _RatingScore;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<PropertyListing> _PropertyListing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReviewIdChanging(int value);
    partial void OnReviewIdChanged();
    partial void OnFK_AccountChanging(int value);
    partial void OnFK_AccountChanged();
    partial void OnFK_PropertyListingChanging(int value);
    partial void OnFK_PropertyListingChanged();
    partial void OnReviewChanging(string value);
    partial void OnReviewChanged();
    partial void OnRatingScoreChanging(int value);
    partial void OnRatingScoreChanged();
    #endregion
		
		public GuestReview()
		{
			this._Account = default(EntityRef<Account>);
			this._PropertyListing = default(EntityRef<PropertyListing>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReviewId
		{
			get
			{
				return this._ReviewId;
			}
			set
			{
				if ((this._ReviewId != value))
				{
					this.OnReviewIdChanging(value);
					this.SendPropertyChanging();
					this._ReviewId = value;
					this.SendPropertyChanged("ReviewId");
					this.OnReviewIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Account", DbType="Int NOT NULL")]
		public int FK_Account
		{
			get
			{
				return this._FK_Account;
			}
			set
			{
				if ((this._FK_Account != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_AccountChanging(value);
					this.SendPropertyChanging();
					this._FK_Account = value;
					this.SendPropertyChanged("FK_Account");
					this.OnFK_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PropertyListing", DbType="Int NOT NULL")]
		public int FK_PropertyListing
		{
			get
			{
				return this._FK_PropertyListing;
			}
			set
			{
				if ((this._FK_PropertyListing != value))
				{
					if (this._PropertyListing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PropertyListingChanging(value);
					this.SendPropertyChanging();
					this._FK_PropertyListing = value;
					this.SendPropertyChanged("FK_PropertyListing");
					this.OnFK_PropertyListingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Review
		{
			get
			{
				return this._Review;
			}
			set
			{
				if ((this._Review != value))
				{
					this.OnReviewChanging(value);
					this.SendPropertyChanging();
					this._Review = value;
					this.SendPropertyChanged("Review");
					this.OnReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingScore", DbType="Int NOT NULL")]
		public int RatingScore
		{
			get
			{
				return this._RatingScore;
			}
			set
			{
				if ((this._RatingScore != value))
				{
					this.OnRatingScoreChanging(value);
					this.SendPropertyChanging();
					this._RatingScore = value;
					this.SendPropertyChanged("RatingScore");
					this.OnRatingScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_GuestReview", Storage="_Account", ThisKey="FK_Account", OtherKey="id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.GuestReviews.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.GuestReviews.Add(this);
						this._FK_Account = value.id;
					}
					else
					{
						this._FK_Account = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PropertyListing_GuestReview", Storage="_PropertyListing", ThisKey="FK_PropertyListing", OtherKey="PropertyId", IsForeignKey=true)]
		public PropertyListing PropertyListing
		{
			get
			{
				return this._PropertyListing.Entity;
			}
			set
			{
				PropertyListing previousValue = this._PropertyListing.Entity;
				if (((previousValue != value) 
							|| (this._PropertyListing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PropertyListing.Entity = null;
						previousValue.GuestReviews.Remove(this);
					}
					this._PropertyListing.Entity = value;
					if ((value != null))
					{
						value.GuestReviews.Add(this);
						this._FK_PropertyListing = value.PropertyId;
					}
					else
					{
						this._FK_PropertyListing = default(int);
					}
					this.SendPropertyChanged("PropertyListing");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageId;
		
		private byte _MessageType;
		
		private byte _MessageStatus;
		
		private string _MessageBody;
		
		private int _FK_Account;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnMessageTypeChanging(byte value);
    partial void OnMessageTypeChanged();
    partial void OnMessageStatusChanging(byte value);
    partial void OnMessageStatusChanged();
    partial void OnMessageBodyChanging(string value);
    partial void OnMessageBodyChanged();
    partial void OnFK_AccountChanging(int value);
    partial void OnFK_AccountChanged();
    #endregion
		
		public Message()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageId
		{
			get
			{
				return this._MessageId;
			}
			set
			{
				if ((this._MessageId != value))
				{
					this.OnMessageIdChanging(value);
					this.SendPropertyChanging();
					this._MessageId = value;
					this.SendPropertyChanged("MessageId");
					this.OnMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageType", DbType="TinyInt NOT NULL")]
		public byte MessageType
		{
			get
			{
				return this._MessageType;
			}
			set
			{
				if ((this._MessageType != value))
				{
					this.OnMessageTypeChanging(value);
					this.SendPropertyChanging();
					this._MessageType = value;
					this.SendPropertyChanged("MessageType");
					this.OnMessageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageStatus", DbType="TinyInt NOT NULL")]
		public byte MessageStatus
		{
			get
			{
				return this._MessageStatus;
			}
			set
			{
				if ((this._MessageStatus != value))
				{
					this.OnMessageStatusChanging(value);
					this.SendPropertyChanging();
					this._MessageStatus = value;
					this.SendPropertyChanged("MessageStatus");
					this.OnMessageStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageBody", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MessageBody
		{
			get
			{
				return this._MessageBody;
			}
			set
			{
				if ((this._MessageBody != value))
				{
					this.OnMessageBodyChanging(value);
					this.SendPropertyChanging();
					this._MessageBody = value;
					this.SendPropertyChanged("MessageBody");
					this.OnMessageBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Account", DbType="Int NOT NULL")]
		public int FK_Account
		{
			get
			{
				return this._FK_Account;
			}
			set
			{
				if ((this._FK_Account != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_AccountChanging(value);
					this.SendPropertyChanging();
					this._FK_Account = value;
					this.SendPropertyChanged("FK_Account");
					this.OnFK_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Message", Storage="_Account", ThisKey="FK_Account", OtherKey="id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._FK_Account = value.id;
					}
					else
					{
						this._FK_Account = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PropertyListing")]
	public partial class PropertyListing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyId;
		
		private int _FK_Account;
		
		private byte _State;
		
		private System.Nullable<long> _PricePerNight;
		
		private System.Nullable<long> _PricePerMonth;
		
		private System.Nullable<long> _PricePerWeek;
		
		private string _Photos;
		
		private string _GreatTitle;
		
		private string _GreatSummary;
		
		private byte _BedRoom;
		
		private int _Bathroom;
		
		private byte _HomeType;
		
		private byte _RoomType;
		
		private byte _Accommodates;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State2;
		
		private string _Zip;
		
		private int _FK__Country;
		
		private EntitySet<Reservation> _Reservations;
		
		private EntitySet<GuestReview> _GuestReviews;
		
		private EntitySet<PropertyListing__Amenity> _PropertyListing__Amenities;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<_Country> @__Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyIdChanging(int value);
    partial void OnPropertyIdChanged();
    partial void OnFK_AccountChanging(int value);
    partial void OnFK_AccountChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnPricePerNightChanging(System.Nullable<long> value);
    partial void OnPricePerNightChanged();
    partial void OnPricePerMonthChanging(System.Nullable<long> value);
    partial void OnPricePerMonthChanged();
    partial void OnPricePerWeekChanging(System.Nullable<long> value);
    partial void OnPricePerWeekChanged();
    partial void OnPhotosChanging(string value);
    partial void OnPhotosChanged();
    partial void OnGreatTitleChanging(string value);
    partial void OnGreatTitleChanged();
    partial void OnGreatSummaryChanging(string value);
    partial void OnGreatSummaryChanged();
    partial void OnBedRoomChanging(byte value);
    partial void OnBedRoomChanged();
    partial void OnBathroomChanging(int value);
    partial void OnBathroomChanged();
    partial void OnHomeTypeChanging(byte value);
    partial void OnHomeTypeChanged();
    partial void OnRoomTypeChanging(byte value);
    partial void OnRoomTypeChanged();
    partial void OnAccommodatesChanging(byte value);
    partial void OnAccommodatesChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnState2Changing(string value);
    partial void OnState2Changed();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnFK__CountryChanging(int value);
    partial void OnFK__CountryChanged();
    #endregion
		
		public PropertyListing()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			this._GuestReviews = new EntitySet<GuestReview>(new Action<GuestReview>(this.attach_GuestReviews), new Action<GuestReview>(this.detach_GuestReviews));
			this._PropertyListing__Amenities = new EntitySet<PropertyListing__Amenity>(new Action<PropertyListing__Amenity>(this.attach_PropertyListing__Amenities), new Action<PropertyListing__Amenity>(this.detach_PropertyListing__Amenities));
			this._Account = default(EntityRef<Account>);
			this.@__Country = default(EntityRef<_Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PropertyId
		{
			get
			{
				return this._PropertyId;
			}
			set
			{
				if ((this._PropertyId != value))
				{
					this.OnPropertyIdChanging(value);
					this.SendPropertyChanging();
					this._PropertyId = value;
					this.SendPropertyChanged("PropertyId");
					this.OnPropertyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Account", DbType="Int NOT NULL")]
		public int FK_Account
		{
			get
			{
				return this._FK_Account;
			}
			set
			{
				if ((this._FK_Account != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_AccountChanging(value);
					this.SendPropertyChanging();
					this._FK_Account = value;
					this.SendPropertyChanged("FK_Account");
					this.OnFK_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="TinyInt NOT NULL")]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerNight", DbType="BigInt")]
		public System.Nullable<long> PricePerNight
		{
			get
			{
				return this._PricePerNight;
			}
			set
			{
				if ((this._PricePerNight != value))
				{
					this.OnPricePerNightChanging(value);
					this.SendPropertyChanging();
					this._PricePerNight = value;
					this.SendPropertyChanged("PricePerNight");
					this.OnPricePerNightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerMonth", DbType="BigInt")]
		public System.Nullable<long> PricePerMonth
		{
			get
			{
				return this._PricePerMonth;
			}
			set
			{
				if ((this._PricePerMonth != value))
				{
					this.OnPricePerMonthChanging(value);
					this.SendPropertyChanging();
					this._PricePerMonth = value;
					this.SendPropertyChanged("PricePerMonth");
					this.OnPricePerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerWeek", DbType="BigInt")]
		public System.Nullable<long> PricePerWeek
		{
			get
			{
				return this._PricePerWeek;
			}
			set
			{
				if ((this._PricePerWeek != value))
				{
					this.OnPricePerWeekChanging(value);
					this.SendPropertyChanging();
					this._PricePerWeek = value;
					this.SendPropertyChanged("PricePerWeek");
					this.OnPricePerWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photos", DbType="NVarChar(2000)")]
		public string Photos
		{
			get
			{
				return this._Photos;
			}
			set
			{
				if ((this._Photos != value))
				{
					this.OnPhotosChanging(value);
					this.SendPropertyChanging();
					this._Photos = value;
					this.SendPropertyChanged("Photos");
					this.OnPhotosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreatTitle", DbType="NVarChar(40)")]
		public string GreatTitle
		{
			get
			{
				return this._GreatTitle;
			}
			set
			{
				if ((this._GreatTitle != value))
				{
					this.OnGreatTitleChanging(value);
					this.SendPropertyChanging();
					this._GreatTitle = value;
					this.SendPropertyChanged("GreatTitle");
					this.OnGreatTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreatSummary", DbType="NVarChar(255)")]
		public string GreatSummary
		{
			get
			{
				return this._GreatSummary;
			}
			set
			{
				if ((this._GreatSummary != value))
				{
					this.OnGreatSummaryChanging(value);
					this.SendPropertyChanging();
					this._GreatSummary = value;
					this.SendPropertyChanged("GreatSummary");
					this.OnGreatSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedRoom", DbType="TinyInt NOT NULL")]
		public byte BedRoom
		{
			get
			{
				return this._BedRoom;
			}
			set
			{
				if ((this._BedRoom != value))
				{
					this.OnBedRoomChanging(value);
					this.SendPropertyChanging();
					this._BedRoom = value;
					this.SendPropertyChanged("BedRoom");
					this.OnBedRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bathroom", DbType="Int NOT NULL")]
		public int Bathroom
		{
			get
			{
				return this._Bathroom;
			}
			set
			{
				if ((this._Bathroom != value))
				{
					this.OnBathroomChanging(value);
					this.SendPropertyChanging();
					this._Bathroom = value;
					this.SendPropertyChanged("Bathroom");
					this.OnBathroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeType", DbType="TinyInt NOT NULL")]
		public byte HomeType
		{
			get
			{
				return this._HomeType;
			}
			set
			{
				if ((this._HomeType != value))
				{
					this.OnHomeTypeChanging(value);
					this.SendPropertyChanging();
					this._HomeType = value;
					this.SendPropertyChanged("HomeType");
					this.OnHomeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="TinyInt NOT NULL")]
		public byte RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accommodates", DbType="TinyInt NOT NULL")]
		public byte Accommodates
		{
			get
			{
				return this._Accommodates;
			}
			set
			{
				if ((this._Accommodates != value))
				{
					this.OnAccommodatesChanging(value);
					this.SendPropertyChanging();
					this._Accommodates = value;
					this.SendPropertyChanged("Accommodates");
					this.OnAccommodatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(50)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(20)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State2", DbType="NVarChar(255)")]
		public string State2
		{
			get
			{
				return this._State2;
			}
			set
			{
				if ((this._State2 != value))
				{
					this.OnState2Changing(value);
					this.SendPropertyChanging();
					this._State2 = value;
					this.SendPropertyChanged("State2");
					this.OnState2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK__Country", DbType="Int NOT NULL")]
		public int FK__Country
		{
			get
			{
				return this._FK__Country;
			}
			set
			{
				if ((this._FK__Country != value))
				{
					if (this.@__Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK__CountryChanging(value);
					this.SendPropertyChanging();
					this._FK__Country = value;
					this.SendPropertyChanged("FK__Country");
					this.OnFK__CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PropertyListing_Reservation", Storage="_Reservations", ThisKey="PropertyId", OtherKey="FK_PropertyListing")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PropertyListing_GuestReview", Storage="_GuestReviews", ThisKey="PropertyId", OtherKey="FK_PropertyListing")]
		public EntitySet<GuestReview> GuestReviews
		{
			get
			{
				return this._GuestReviews;
			}
			set
			{
				this._GuestReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PropertyListing_PropertyListing__Amenity", Storage="_PropertyListing__Amenities", ThisKey="PropertyId", OtherKey="FK_PropertyListing")]
		public EntitySet<PropertyListing__Amenity> PropertyListing__Amenities
		{
			get
			{
				return this._PropertyListing__Amenities;
			}
			set
			{
				this._PropertyListing__Amenities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PropertyListing", Storage="_Account", ThisKey="FK_Account", OtherKey="id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PropertyListings.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PropertyListings.Add(this);
						this._FK_Account = value.id;
					}
					else
					{
						this._FK_Account = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Country_PropertyListing", Storage="__Country", ThisKey="FK__Country", OtherKey="id", IsForeignKey=true)]
		public _Country _Country
		{
			get
			{
				return this.@__Country.Entity;
			}
			set
			{
				_Country previousValue = this.@__Country.Entity;
				if (((previousValue != value) 
							|| (this.@__Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Country.Entity = null;
						previousValue.PropertyListings.Remove(this);
					}
					this.@__Country.Entity = value;
					if ((value != null))
					{
						value.PropertyListings.Add(this);
						this._FK__Country = value.id;
					}
					else
					{
						this._FK__Country = default(int);
					}
					this.SendPropertyChanged("_Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.PropertyListing = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.PropertyListing = null;
		}
		
		private void attach_GuestReviews(GuestReview entity)
		{
			this.SendPropertyChanging();
			entity.PropertyListing = this;
		}
		
		private void detach_GuestReviews(GuestReview entity)
		{
			this.SendPropertyChanging();
			entity.PropertyListing = null;
		}
		
		private void attach_PropertyListing__Amenities(PropertyListing__Amenity entity)
		{
			this.SendPropertyChanging();
			entity.PropertyListing = this;
		}
		
		private void detach_PropertyListing__Amenities(PropertyListing__Amenity entity)
		{
			this.SendPropertyChanging();
			entity.PropertyListing = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PropertyListing__Amenities")]
	public partial class PropertyListing__Amenity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FK_PropertyListing;
		
		private int _FK__Amenities;
		
		private EntityRef<_Amenity> @__Amenity;
		
		private EntityRef<PropertyListing> _PropertyListing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFK_PropertyListingChanging(int value);
    partial void OnFK_PropertyListingChanged();
    partial void OnFK__AmenitiesChanging(int value);
    partial void OnFK__AmenitiesChanged();
    #endregion
		
		public PropertyListing__Amenity()
		{
			this.@__Amenity = default(EntityRef<_Amenity>);
			this._PropertyListing = default(EntityRef<PropertyListing>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PropertyListing", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK_PropertyListing
		{
			get
			{
				return this._FK_PropertyListing;
			}
			set
			{
				if ((this._FK_PropertyListing != value))
				{
					if (this._PropertyListing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PropertyListingChanging(value);
					this.SendPropertyChanging();
					this._FK_PropertyListing = value;
					this.SendPropertyChanged("FK_PropertyListing");
					this.OnFK_PropertyListingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK__Amenities", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FK__Amenities
		{
			get
			{
				return this._FK__Amenities;
			}
			set
			{
				if ((this._FK__Amenities != value))
				{
					if (this.@__Amenity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK__AmenitiesChanging(value);
					this.SendPropertyChanging();
					this._FK__Amenities = value;
					this.SendPropertyChanged("FK__Amenities");
					this.OnFK__AmenitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Amenity_PropertyListing__Amenity", Storage="__Amenity", ThisKey="FK__Amenities", OtherKey="id", IsForeignKey=true)]
		public _Amenity _Amenity
		{
			get
			{
				return this.@__Amenity.Entity;
			}
			set
			{
				_Amenity previousValue = this.@__Amenity.Entity;
				if (((previousValue != value) 
							|| (this.@__Amenity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Amenity.Entity = null;
						previousValue.PropertyListing__Amenities.Remove(this);
					}
					this.@__Amenity.Entity = value;
					if ((value != null))
					{
						value.PropertyListing__Amenities.Add(this);
						this._FK__Amenities = value.id;
					}
					else
					{
						this._FK__Amenities = default(int);
					}
					this.SendPropertyChanged("_Amenity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PropertyListing_PropertyListing__Amenity", Storage="_PropertyListing", ThisKey="FK_PropertyListing", OtherKey="PropertyId", IsForeignKey=true)]
		public PropertyListing PropertyListing
		{
			get
			{
				return this._PropertyListing.Entity;
			}
			set
			{
				PropertyListing previousValue = this._PropertyListing.Entity;
				if (((previousValue != value) 
							|| (this._PropertyListing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PropertyListing.Entity = null;
						previousValue.PropertyListing__Amenities.Remove(this);
					}
					this._PropertyListing.Entity = value;
					if ((value != null))
					{
						value.PropertyListing__Amenities.Add(this);
						this._FK_PropertyListing = value.PropertyId;
					}
					else
					{
						this._FK_PropertyListing = default(int);
					}
					this.SendPropertyChanged("PropertyListing");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
